apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo
  namespace: default
spec:
  replicas: 1
  selector: { matchLabels: { app: demo } }
  template:
    metadata: { labels: { app: demo } }
    spec:
      containers:
      - name: web
        image: nginx:1.25-alpine
        ports: [{containerPort: 80}]
        readinessProbe: { httpGet: { path: /, port: 80 }, initialDelaySeconds: 2, periodSeconds: 5 }
---
apiVersion: v1
kind: Pod
metadata:
  name: crashy
  namespace: default
spec:
  restartPolicy: Always
  containers:
  - name: bad
    image: busybox
    command: ["sh","-c"]
    args: ["echo starting; exit 1"]
---
apiVersion: v1
kind: Pod
metadata:
  name: noisy-crashy
  namespace: default
spec:
  restartPolicy: Always
  containers:
  - name: noisy
    image: busybox
    command: ["sh","-c"]
    args:
      - |
        i=0
        while true; do
          echo "ERROR: payments timeout calling /charge id=$i"
          echo "Exception: redis connection refused id=$i"
          i=$((i+1))
          sleep 1
          # crash periodically to trigger CrashLoopBackOff
          if [ $i -ge 20 ]; then exit 1; fi
        done
