grafana:
enabled: false # enable if you want dashboards


kubeApiServer:
enabled: true # ensure apiserver target is scraped


rbac:
create: true


prometheus:
service:
type: ClusterIP
prometheusSpec:
retention: 2d
scrapeInterval: 15s
evaluationInterval: 15s
resources:
requests:
cpu: 100m
memory: 256Mi
ruleSelectorNilUsesHelmValues: false
serviceMonitorSelectorNilUsesHelmValues: false
podMonitorSelectorNilUsesHelmValues: false


# Optional: burn‑rate alerts (API server as an example, 99.5% SLO)
additionalPrometheusRulesMap:
slo-burn:
groups:
- name: slo-burn
rules:
- alert: HighErrorBudgetBurn_5m_99_5
for: 2m
labels:
severity: page
window: "5m"
annotations:
summary: "High error‑budget burn (5m window)"
runbook: "Check recent deploys/canary; inspect logs and probes"
expr: |
(
sum(rate(apiserver_request_total{code=~"5.."}[5m]))
/
sum(rate(apiserver_request_total[5m]))
)
/ ( (1 - 0.995) * (5 / 43200) ) > 6
- alert: ErrorBudgetBurn_30m_99_5
for: 10m
labels:
severity: warn
window: "30m"
annotations:
summary: "Elevated error‑budget burn (30m)"
expr: |
(
sum(rate(apiserver_request_total{code=~"5.."}[30m]))
/
sum(rate(apiserver_request_total[30m]))
)
/ ( (1 - 0.995) * (30 / 43200) ) > 1